import { Plugin, PluginOption } from "vite";
import { resolve } from "path";
import { getHtmlPages, getHugoConfig } from "./utils";

export interface Options {
  /**
   * Output path to hugo build directory.
   */
  hugoOutDir: string;

  /**
   * Root directory of an application.
   */
  appDir: string;

  /**
   * Patterns to ignore html input files for rollup.
   */
  ignoreHTMLFiles?: string[];

  /**
   * Hugo config file name. By default is set to `hugo.toml`.
   */
  hugoConfigFileName?: string;
}
function hugoPlugin({
  hugoOutDir,
  appDir,
  ignoreHTMLFiles = [],
  hugoConfigFileName = "hugo.toml",
}: Options): PluginOption {
  const hugoConfig = getHugoConfig(appDir, hugoConfigFileName);

  const ignoreBuildPaths: string[] = [];

  // Ignore default content language as hugo build it into out dir instead of language dir.
  if (hugoConfig.defaultContentLanguage) {
    ignoreBuildPaths.push(
      resolve(hugoOutDir, hugoConfig.defaultContentLanguage)
    );
  }

  const hugo: Plugin = {
    name: "vite-plugin-hugo",
    config: () => ({
      root: hugoOutDir,
      resolve: {
        // Resolve aliases
        alias: {
          // Resolving path in imports.
          js: resolve(appDir, "assets", "js"),
          "/assets": resolve(appDir, "assets"),
          "/plugins": resolve(hugoOutDir, "plugins"),
        },
      },
      build: {
        // Build vite into the same directory as hugo
        outDir: hugoOutDir,
        // Vite will build app on top of the files generated by hugo build.
        emptyOutDir: false,
        rollupOptions: {
          // Routing
          input: getHtmlPages(hugoOutDir, [
            ...ignoreBuildPaths,
            ...ignoreHTMLFiles,
          ]),
        },
      },
    }),
  };

  return hugo;
}

export default hugoPlugin
